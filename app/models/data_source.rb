require 'twitter'

class DataSource
  include Mongoid::Document

  # Attribute listing
  field :user_id, type: String
  field :last_crawl, type: DateTime
  
  # Validations
  validates :user_id, presence: true
  validates_each :user_id do |record, attr, value|
    twitter = Twitter.new(record.unknown_subject.user.access_token)
    record.errors.add attr, 'is not a Twitter user' unless twitter.is_valid_user?(value)
  end
  
  # Relations
  belongs_to :unknown_subject
  has_many :status_updates
  
  def twitter_profile_url
    "https://www.twitter.com/#{user_id}"
  end

  def fetch_status_updates
    twitter = Twitter.new(unknown_subject.user.access_token)
    twitter.tweets(self.user_id) do |tweet|
      unless status_updates.find_by(id_str: tweet['id_str'])
        # HACK: We skip the ID attribute because those should be autogenerated
        # by Mongoid/MongoDB, otherwise relations do not work properly
        status_update = status_updates.new
        tweet.each { |k,v| status_update[k] = v unless k.match(/^id$/) }
        status_update.save
      end
    end
    last_crawl = DateTime.now
  end
end
